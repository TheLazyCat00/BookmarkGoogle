!function(){if(window._mapsInterceptorActive)return;window._mapsInterceptorActive=!0;const t=window.fetch;window.fetch=function(...e){const o=e[0];return"string"==typeof o&&o.includes("maps/preview/place")?t.apply(this,e).then(t=>(t.clone().text().then(t=>{n(o,t)}),t)):t.apply(this,e)};const e=window.XMLHttpRequest.prototype.open,o=window.XMLHttpRequest.prototype.send;function n(t,e){let o=e;e.startsWith(")]}'")&&(o=e.substring(4));try{let t=JSON.parse(o)[6],e=t[2],n={shortcut:t[42],name:t[11],street:e[0],place:e[1],phone:t[178][0][1][1][0],url:t[7][0],urlName:t[7][1],coords:{x:t[9][2],y:t[9][3]}},r=`### 🌎 [${n.name}](${n.shortcut})\n> - [${n.urlName}](${n.url})\n> - 📍 ${n.street}, ${n.place}\n> - 📞 ${n.phone}\n> - 🗺️ (geo:${n.coords.x},${n.coords.y})`;console.log(r),navigator.clipboard.writeText(r).then(()=>{}).catch(t=>{console.error("Could not copy text: ",t)})}catch(t){console.error("Parse error:",t)}}window.XMLHttpRequest.prototype.open=function(t,o,...n){return this._url=o,e.apply(this,[t,o,...n])},window.XMLHttpRequest.prototype.send=function(...t){return this.addEventListener("load",function(){this._url&&this._url.includes("maps/preview/place")&&n(this._url,this.responseText)}),o.apply(this,t)}}();